<?xml version="1.0" encoding="UTF-8"?>

<!--
    Document   : jbilling-bean.xml
    Created on : January 14, 2009, 4:33 PM
    Author     : emilc
    Description:
        Spring configuration of jBilling beans
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <!--
          ***************************************************
          *         MAIN BEAN DEFINITIONS               *
          ***************************************************
    -->
    <!-- Session Facade beans -->
    <bean id="itemSession" class="com.sapienter.jbilling.server.item.ItemSessionBean"/>
    <bean id="notificationSession" class="com.sapienter.jbilling.server.notification.NotificationSessionBean"/>
    <bean id="customerSession" class="com.sapienter.jbilling.server.customer.CustomerSessionBean"/>
    <bean id="listSession" class="com.sapienter.jbilling.server.list.ListSessionBean"/>
    <bean id="userSession" class="com.sapienter.jbilling.server.user.UserSessionBean"/>
    <bean id="invoiceSession" class="com.sapienter.jbilling.server.invoice.InvoiceSessionBean"/>
    <bean id="orderSession" class="com.sapienter.jbilling.server.order.OrderSessionBean"/>
    <bean id="pluggableTaskSession" class="com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean" />
    <bean id="paymentSession" class="com.sapienter.jbilling.server.payment.PaymentSessionBean"/>
    <bean id="mediationSession" class="com.sapienter.jbilling.server.mediation.MediationSessionBean"/>
    <bean id="reportSession" class="com.sapienter.jbilling.server.report.ReportSessionBean"/>
    <bean id="billingProcessSession" class="com.sapienter.jbilling.server.process.BillingProcessSessionBean"/>
    <bean id="provisioningProcessSession" class="com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean" />
    <!-- The web services API, which is used as main service in the GUI -->
    <bean id="webServicesSession" scope="session" class="com.sapienter.jbilling.server.util.WebServicesSessionSpringBean">
    	<property name="caller" ref="webCaller"/>
    </bean>
    <!-- This is populated by the Login action in the GUI, or the authentication filter for a web services call
         If deploying a web services only node, and in a secure environment, simply remove the filter and inject the
         caller attributes directly to enhance performance -->
    <bean id="webCaller" scope="session" class="com.sapienter.jbilling.server.util.WebServicesCaller" />

    <!-- Data Access Service beans -->
    <bean id="internationalDescriptionDAS" class="com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS"
        factory-method="getInstance" scope="prototype">
        <property name="jbDAS" ref="jbillingTableDAS"/>
    </bean>

   <bean id="jbillingTableDAS" class="com.sapienter.jbilling.server.util.db.JbillingTableDAS"
        factory-method="getInstance" scope="prototype">
        <property name="cache" ref="cacheProviderFacade"/>
        <property name="cacheModel" ref="cacheModelReadOnly"/>
   </bean>

   <bean id="pluggableTaskDAS" class="com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS"
        factory-method="getInstance" scope="prototype">
        <property name="cache" ref="cacheProviderFacade"/>
        <property name="cacheModel" ref="cacheModelPTDTO"/>
        <property name="flushModel" ref="flushModelPTDTO"/>
   </bean>

    
    <!-- Utility beans -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean"/>
    

    <!-- Thrid level cache configuration. Annotations and proxies do not work, other proxies get confussed  -->
    <bean id="cacheManager"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    </bean>

    <bean id="cacheProviderFacade"
        class="org.springmodules.cache.provider.ehcache.EhCacheFacade">
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <bean id="cacheModelReadOnly" class="org.springmodules.cache.provider.ehcache.EhCacheCachingModel">
        <property name="cacheName" value="thirdLevel-RO"/>
    </bean>

    <bean id="cacheModelPTDTO" class="org.springmodules.cache.provider.ehcache.EhCacheCachingModel">
        <property name="cacheName" value="thirdLevel-RW"/>
    </bean>

    <bean id="flushModelPTDTO" class="org.springmodules.cache.provider.ehcache.EhCacheFlushingModel">
        <property name="cacheNames" value="thirdLevel-RW"/>
        <property name="flushBeforeMethodExecution" value="true"/>
    </bean>

    <!-- Item Price cache configuration. -->
    <bean id="cacheModelItemPrice" class="org.springmodules.cache.provider.ehcache.EhCacheCachingModel">
        <property name="cacheName" value="itemPriceCache"/>
    </bean>

    <bean id="flushModelItemPrice" class="org.springmodules.cache.provider.ehcache.EhCacheFlushingModel">
        <property name="cacheNames" value="itemPriceCache"/>
        <property name="flushBeforeMethodExecution" value="true"/>
    </bean>
    
     <!--
          ***************************************************
          *         AOP: Security / Logging                 *
          ***************************************************
    -->
    <!-- Security Advice for WebServicesSessionBean -->
    <!-- Comment out if this jBilling installation is only used by one company.
    <bean id="webServicesSecurityAdvice" class="com.sapienter.jbilling.server.util.WSMethodSecurityProxy"/>
    <bean id="webServicesSecurityAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="webServicesSecurityAdvice"/>
        <property name="pattern" value="com.sapienter.jbilling.server.util.IWebServicesSessionBean.*"/>
    </bean>
    -->
    
    <!-- Exception Advice for WebServicesSessionBean -->
    <!-- Re-throws all exceptions as SessionInternalErrors. -->
    <bean id="webServicesExceptionAdvice" class="com.sapienter.jbilling.server.util.WSExceptionAdvice"/>
    <bean id="webServicesExceptionAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="webServicesExceptionAdvice"/>
        <property name="pattern" value="com.sapienter.jbilling.server.util.IWebServicesSessionBean.*"/>
    </bean>

    <!-- Log Advice for WebServicesSessionBean -->
    <!-- Logs entry and exit for all methods -->
    <bean id="webServicesLogAdvice" class="com.sapienter.jbilling.server.util.api.APILogger"/>
    <bean id="webServicesLogAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="webServicesLogAdvice"/>
        <property name="pattern" value="com.sapienter.jbilling.server.util.IWebServicesSessionBean.*"/>
    </bean>
    
</beans>

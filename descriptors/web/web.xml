<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    jBilling - The Enterprise Open Source Billing System
    Copyright (C) 2003-2009 Enterprise jBilling Software Ltd. and Emiliano Conde

    This file is part of jbilling.

    jbilling is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    jbilling is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with jbilling.  If not, see <http://www.gnu.org/licenses/>.
-->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   version="2.5"> 

  <!-- Generated content from JspC goes here  -->
  jspc-webxml

    <description>
      jBilling Etnerprise
    </description>
    <display-name>jBilling</display-name>

  <!-- Filter Configuration -->
  <filter>
  		<filter-name>Authentication Filter</filter-name>
  		<filter-class>com.sapienter.jbilling.client.user.UserAuthenticationFilter</filter-class>
  		<init-param>
  			<param-name>exception_pages</param-name>
  			<param-value>/user/login.jsp,/verifyPassword.do,/user/forgetPassword.jsp,/forgetPassword.do,/changePassword.do</param-value>
  		</init-param>
  		<init-param>
  			<param-name>signup_prefix</param-name>
  			<param-value>/signup</param-value>
  		</init-param>
    </filter>
  <filter>
  		<filter-name>Menu Selection</filter-name>
  		<filter-class>com.sapienter.jbilling.client.user.MenuSelectionFilter</filter-class>
  </filter>
  <filter>
        <filter-name>Web Services Authentication Filter</filter-name>
        <filter-class>com.sapienter.jbilling.client.util.WebServicesAuthenticationFilter</filter-class>
  </filter>
  
  <filter-mapping>
  		<filter-name>Authentication Filter</filter-name>
		<url-pattern>*.jsp</url-pattern>
  </filter-mapping>  
  <filter-mapping>
  		<filter-name>Authentication Filter</filter-name>
		<url-pattern>*.do</url-pattern>
  </filter-mapping>  
  <filter-mapping>
  		<filter-name>Menu Selection</filter-name>
		<url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
  		<filter-name>Menu Selection</filter-name>
		<url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
  		<filter-name>Web Services Authentication Filter</filter-name>
		<url-pattern>/services/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
  		<filter-name>Web Services Authentication Filter</filter-name>
		<url-pattern>/cxf/*</url-pattern>
  </filter-mapping>

  
  <!-- Action Servlet Configuration -->
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
    <init-param>
      <param-name>application</param-name>
      <param-value>ApplicationResources</param-value>
    </init-param>
    <init-param>
      <param-name>config</param-name>
      <param-value>/WEB-INF/struts-config.xml</param-value>
    </init-param>
    <init-param>
      <param-name>debug</param-name>
      <param-value>2</param-value>
    </init-param>
    <init-param>
      <param-name>detail</param-name>
      <param-value>2</param-value>
    </init-param>
    <init-param>
      <param-name>validate</param-name>
      <param-value>true</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  
  <!-- Gateway Servlet: API -->
  <servlet>
  	<servlet-name>gateway</servlet-name>
  	<servlet-class>com.sapienter.jbilling.client.api.GatewayServlet</servlet-class>
  </servlet>
  <!-- External Callback Servlet: Paypal -->
  <servlet>
  	<servlet-name>callback</servlet-name>
  	<servlet-class>com.sapienter.jbilling.client.api.ExternalCallbackServlet</servlet-class>
  </servlet>
  <!-- Server Up Check Servlet: Monitoring -->
  <servlet>
  	<servlet-name>serverUpCheck</servlet-name>
  	<servlet-class>com.sapienter.jbilling.client.util.ServerUpCheckServlet</servlet-class>
  </servlet>


  <!-- Spring MVC DispatcherServlet -->
  <servlet>
    <servlet-name>jbilling</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- CXF Web Services Servlet -->
  <servlet>
	<servlet-name>CXFServlet</servlet-name>
	<display-name>CXF Servlet</display-name>
	<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	<load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Action Servlet Mapping -->
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  <!-- Gateway Servlet Mapping -->
  <servlet-mapping>
  	<servlet-name>gateway</servlet-name>
  	<url-pattern>/gateway</url-pattern>
  </servlet-mapping>
  
  <!-- External Callback Servlet Mapping -->
  <servlet-mapping>
  	<servlet-name>callback</servlet-name>
  	<url-pattern>/callback</url-pattern>
  </servlet-mapping>  

  <!-- Server Up Check Servlet Mapping -->
  <servlet-mapping>
  	<servlet-name>serverUpCheck</servlet-name>
  	<url-pattern>/serverUpCheck</url-pattern>
  </servlet-mapping>  

  <!-- Spring MVC DispatcherServlet Mapping -->
  <servlet-mapping>
    <servlet-name>jbilling</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

  <!-- CXF Web Services Servlet Mapping -->
  <servlet-mapping>
	<servlet-name>CXFServlet</servlet-name>
	<url-pattern>/cxf/*</url-pattern>
  </servlet-mapping>

  <!-- jBilling Servlet Context Listener -->
  <listener>
  	<listener-class>com.sapienter.jbilling.client.util.JBillingListener</listener-class>
  </listener>

  <!-- Spring MVC ContextLoaderListener configuration -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- No configuration files at this time -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value></param-value>
  </context-param>
  <!-- Configuration of parent ApplicationContext -->
  <context-param>
    <param-name>locatorFactorySelector</param-name>
    <param-value>jbilling-beansRefFactory.xml</param-value>
  </context-param>
  <context-param>
    <param-name>parentContextKey</param-name>
    <param-value>com.sapienter.jbilling</param-value>
  </context-param>

  <session-config>
  	<session-timeout>20</session-timeout>
  </session-config>


  <!-- The Initial page -->
  <welcome-file-list>
    <welcome-file>user/login.jsp</welcome-file>
  </welcome-file-list>

  <!-- Struts Tag Library Descriptors -->
  <taglib>
    <taglib-uri>/WEB-INF/struts-bean.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-bean.tld</taglib-location>
  </taglib>
  <taglib>
    <taglib-uri>/WEB-INF/struts-html.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-html.tld</taglib-location>
  </taglib>
  <taglib>
    <taglib-uri>/WEB-INF/struts-logic.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-logic.tld</taglib-location>
  </taglib>
  <taglib>
    <taglib-uri>/WEB-INF/struts-template.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-template.tld</taglib-location>
  </taglib>
  <taglib>
    <taglib-uri>/WEB-INF/struts-tiles.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-tiles.tld</taglib-location>
  </taglib>

  <!-- Jackarta Taglib  Descriptors -->  
  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/session-1.0</taglib-uri>
    <taglib-location>/WEB-INF/taglibs-session.tld</taglib-location>
  </taglib>

  <!-- BettyTaglib  Descriptor, generated by xdoclet -->   
  <taglib>
    <taglib-uri>/WEB-INF/taglib.tld</taglib-uri>
    <taglib-location>/WEB-INF/taglib.tld</taglib-location>
  </taglib>



 <!-- Security stuff, now not implemented 
 	This side had the last problem that wasn't solved. The idea is that through
 	the transport-fuarantee, the container will make the kick http->https. That 
 	was fine, but then I couldn't get rid of an error: 500 Anauthenticated principal.
  <security-constraint>
  	<web-resource-collection>
      <web-resource-name>bettyPages</web-resource-name>
      <description>All pages of the billing application</description>
      <url-pattern>/order/*</url-pattern>
      <http-method>GET</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>*</role-name>
    </auth-constraint>
	<user-data-constraint>
      <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>
  </security-constraint>
  
  <login-config>
    <auth-method>FORM</auth-method>
    <realm-name>Default</realm-name>
    <form-login-config>
      <form-login-page>/user/login.jsp</form-login-page>
      <form-error-page>/user/login.jsp</form-error-page>
    </form-login-config>
  </login-config>
	-->
</web-app>

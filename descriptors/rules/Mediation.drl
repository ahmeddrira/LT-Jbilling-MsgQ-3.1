package Mediation

import com.sapienter.jbilling.server.item.PricingField
import com.sapienter.jbilling.server.mediation.task.MediationResult
import com.sapienter.jbilling.server.user.UserBL
import com.sapienter.jbilling.server.order.OrderLineBL
import com.sapienter.jbilling.server.order.OrderBL
import com.sapienter.jbilling.server.user.db.CompanyDTO
import com.sapienter.jbilling.server.order.db.OrderLineDTO
import com.sapienter.jbilling.server.item.tasks.PricingResult
import org.apache.log4j.Logger;
import java.util.List;

global org.apache.log4j.Logger LOG;

function int convert_to_minutes(Integer seconds) {
	return ((int)  Math.ceil(seconds / 60)) + 1;
}

function int getUserIdFromUsername(String username, Integer entityId) {
    UserBL user = new UserBL(username, entityId);
    return user.getEntity().getUserId();
}

function int getDefaultCurrency(Integer userId) {
    return new UserBL(userId).getCurrencyId();
}

function OrderLineDTO newLine(Integer itemId, Double quantity) {
    OrderLineDTO line =  new OrderLineDTO();
    line.setItemId(itemId);
    line.setQuantity(quantity);
    line.setDefaults();
    return line;
}

function PricingResult priceRequest(Integer itemId, MediationResult result) {
    PricingResult pricing = new PricingResult(itemId, result.getUserId(),
            result.getCurrencyId());
    pricing.setPricingFieldsResultId(result.getId());
    return pricing;
 }

function void addLine(MediationResult result) {
    List<OrderLineDTO> originalLines = OrderLineBL.copy(result.getCurrentOrder().getLines());
    // I need to pass the price, even if it is null
    OrderLineBL.addLine(result.getCurrentOrder(), result.getLines().get(0), true);
    result.setDiffLines(OrderLineBL.diffOrderLines(originalLines, result.getCurrentOrder().getLines()));
    result.setDone(true);
}


rule 'user setter'
when 
    $result : MediationResult(userId == null)
    $field : PricingField( name == "userfield", resultId == $result.id)
    $company : CompanyDTO( ) # needed to determine a user by its user name
then
    modify( $result ) {
        setUserId( getUserIdFromUsername($field.getStrValue(), $company.getId()) );
    }
    LOG.debug("The user was set to " + $result.getUserId());
end

rule 'currency setter'
when
    $result : MediationResult(currencyId == null, userId != null)
then
    modify( $result ) {
        setCurrencyId( getDefaultCurrency($result.getUserId()) );
    }
    LOG.debug("The currency was set to " + $result.getCurrencyId());
end

rule 'get current order'
when
    $result : MediationResult(currencyId != null, userId != null,
                              eventDate != null, currentOrder == null)
then
    modify( $result ) {
        setCurrentOrder( OrderBL.getOrCreateCurrentOrder($result.getUserId(),
                $result.getEventDate(), $result.getCurrencyId()) );
    }
    LOG.debug("The current order was fetched");
end

rule 'price request'
when
    $result : MediationResult( currentOrder != null )
    $field : PricingField( name == "duration", resultId == $result.id)
    not ( OrderLineDTO( itemId == 1) from $result.lines )
then
    $result.getLines().add(newLine(1, new Double($field.getIntValue())));
    update( $result );
    PricingResult request = priceRequest(1, $result);
    insert( request );
    LOG.debug("Price request " + request);
end

# this might or might not run... depending if there are pricing with rules
# if not, then the default price will be used
rule 'price assignment'
when
    $result : MediationResult( currentOrder != null )
    $line : OrderLineDTO( price == null) from $result.lines
    $price : PricingResult( itemId == $line.itemId, pricingFieldsResultId == $result.id, price != null )
then
    $line.setPrice( $price.getPrice() );
    update( $result );
    LOG.debug("Price assigned " + $line);
end

# line creation has to be done after price request/assignment
# otherwise it could be fired before the pricing is completed
rule 'line creation'
salience -10
when
    $result : MediationResult( currentOrder != null, done == false )
    $phoneCalled : PricingField( name == "dst", resultId == $result.id)
then
    addLine($result); # will add the first line to the current order
    $result.setDescription("Phone call to " + $phoneCalled);
    retract($result); # done
    # to allow item management rules
    insert($result.getCurrentOrder());
    LOG.debug("current order updated " + $result.getId());
end

rule 'date setter'
when
    $result : MediationResult(eventDate == null)
    $field : PricingField( name == "start", resultId == $result.id)
then
    modify( $result ) {
        setEventDate( $field.getDateValue() );
    }
    LOG.debug("day set to " + $result.getEventDate());
end


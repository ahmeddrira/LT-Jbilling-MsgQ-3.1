Some of your customers, or all of them, might have opted for the automatic payment processing option (either by using a credit card number or by direct debit). 

!autopaymentprocessing.png!

In these cases, *j*billing will proceed with clearing the payment the moment an invoice is generated. Should this attempt to process a payment fail, *j*billing can try again.

!numberofretries.png!

In this field, you specify how many retries you want the system to perform. You can find more information about payment retries in the 'Automatic Payment Processing' section of this document.

For example: *Trend* has many customers who's invoices get automatically paid for every time new ones are generated. It happens that one customer has a problem with its bank account, or that another one has not renewed their credit card, therefore, *j*billing's attempt to clear the payment fails. *Trend* indicated to the system that it should retry 2 times to clear a payment.

*Number of Days Between Retries*

Enter here how many days you wish to have in between retries. It is recommended to allow for enough time in between the retries for your customers to sort out whatever difficulty might have prevented the first payment from being cleared.

!daysbetweenretries.png! 

For example: *Trend* enters 5 days in between the retries (therefore, a first retry on the 5th of the month and a second one on the 10th). 

This also means they have set up a total of three attempts to receive payment: the initial one with the original billing process, plus two retries.

*Billing Period*

When the billing process takes place, the system looks ahead for the period of time specified during the configuration of the system. The system will generate an invoice for any purchase order containing billable time that falls within this period of time. The system allows for this period to be any length of time (weekly, monthly, etc even daily).

!billingperiod.png! 

You don't want this period to be too long. It is too long when some invoices can get more than one period of time from a purchase order. On the other hand, a period is too short when you have unnecessary runs that produce no invoices.

For example: *Trend* sells banners of advertisement displayed on the Internet. Some are sold in one week packages, others in one month packages and yet others in 3 month packages. These services are all pre-paid and are generally hired over many cycles. Thus, for *Trend* a one week billing process is a good choice: it is the shortest period of any of their purchase orders.

*Due Date*

The Due Date is the period of time your customers are given to pay their invoice before it becomes overdue. This field here represents the default Due Date, companywide.

It is possible to override this Due Date for a customer in particular to whom you wish to give a unique one (either when creating a new customer, or when editing the information for an existing one). This can also be done at the Purchase Order level, where you assign a particular Due Date for one Purchase Order in particular (either when creating a new Purchase Order, or when editing the information for an existing one), which will override the other ones.

!billingprocessduedate.png!

See the 'Due Dates' section of this chapter for more information.

*Require Recurring Order*

If this box is checked, the system will generate an invoice for a customer *only if there is at least one recurring Purchase Order* included in the invoice. This will prevent the system from generating invoices for one-time Purchase Orders (probably with small totals), and force it to include them in the invoices including recurring Purchase Orders.

!requirerecorder.png!

If your customers expect an even flow of invoices, say one per month, you might need to have this box checked. This would prevent the billing process to generate an invoice in the middle of the month for a one-time purchase order. This one will be later picked up along with the recurring monthly purchase order.

For example: *Trend's* customers receive their invoices on a monthly basis, the 1st of each month. This does not prevent them from making one-time purchases at anytime during the month. *Trend* finds it easier to collect payments when the invoicing remains simple: one invoice per month per customer. Therefore, Trend does not want these one-time sells to generate invoices of their own. They want the one-time sells to be included in the monthly invoices along with the regular recurring fees. In this case, they will turn 'on' the Require Recurring Order option.

*Use Process Date for Invoices*

If this check-box is set: *all the invoices generated by the billing process will be created with the same date as the billing process.*

!processdateinvoice.png!

If this check-box is not set, the date of the resulting invoices will be taken from the purchase orders included in each invoice. The period from the purchase order being included in an invoice will be the main factor for the invoice date.

Let's explore some examples where you would set the 'Use process date for invoices' field to 'on':

{table}
*Period Being Invoiced from the Purchase Order*|*Billing Process Date*|*Invoice Date*
July 10 - August 9 | July 8 | July 10
August 10 - September 9 | August 11 | August 10
September 10 - October 9 | September 9 | September 10
{table}

In all cases, the invoice date is equal to the first day being invoiced. As you can see, what determines the invoice date is not the billing process, but the period that is being included from a purchase order.

If many purchase orders are being included in a single invoice, the earliest period from a recurring purchase order will take precedence. This means that if you have a recurring purchase order generating invoices, with some one-time purchase orders included as well, the date to set the invoice date will be taken from the recurring purchase order only.

The invoice date is very important, because the due date of the invoice will be calculated based on the invoice date.